{"version":3,"sources":["config.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/NewExpense/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["INITIAL_EXPENSES","id","title","amount","date","Date","ExpenseDate","props","month","toLocaleString","year","getFullYear","day","className","Card","classes","children","ExpenseItem","cost","ExpensesList","filteredExpenses","expense","length","map","name","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ChartBar","label","maxValue","barFillHeight","Math","round","style","height","Chart","data","dataPoints","dataPointValues","el","totalMaximum","max","dataPoint","months","Array","from","_","i","Intl","DateTimeFormat","format","creatDate","ExpensesChart","expenses","chartDataPoints","mon","forEach","expenseMonth","getMonth","Expenses","useState","filteredYear","setFilteredYear","filter","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","e","preventDefault","expenseData","onSaveExpenseData","type","min","step","NewExpense","enteredExpenseData","random","toString","onAddExpense","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f89a6aa.chunk.js","sourcesContent":["//Dummy expenses\r\nexport const INITIAL_EXPENSES = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"Toilet Paper\",\r\n    amount: 94.12,\r\n    date: new Date(2021, 7, 14),\r\n  },\r\n  {\r\n    id: \"e2\",\r\n    title: \"New TV\",\r\n    amount: 79.49,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n  {\r\n    id: \"e3\",\r\n    title: \"Car Insurance\",\r\n    amount: 94.67,\r\n    date: new Date(2020, 8, 28),\r\n  },\r\n  {\r\n    id: \"e4\",\r\n    title: \"Phone Case\",\r\n    amount: 40,\r\n    date: new Date(2021, 6, 12),\r\n  },\r\n  {\r\n    id: \"e5\",\r\n    title: \"Active Stylus Pen\",\r\n    amount: 10.55,\r\n    date: new Date(2021, 8, 12),\r\n  },\r\n  {\r\n    id: \"e6\",\r\n    title: \"Phone\",\r\n    amount: 95,\r\n    date: new Date(2021, 2, 12),\r\n  },\r\n  {\r\n    id: \"e7\",\r\n    title: \"Car\",\r\n    amount: 60,\r\n    date: new Date(2020, 4, 28),\r\n  },\r\n];\r\n","import \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props) {\r\n  const date = props.date;\r\n\r\n  const month = date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const year = date.getFullYear();\r\n  const day = date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n  const classes = `card ${props.className}`;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nfunction ExpenseItem(props) {\r\n  const { date, title, amount } = props.cost;\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{title}</h2>\r\n          <div className=\"expense-item__price\">${amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nfunction ExpensesList(props) {\r\n  //From Expenses.js\r\n  const filteredExpenses = props.expense;\r\n\r\n  if (filteredExpenses.length === 0)\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n  else\r\n    return (\r\n      <ul className=\"expenses-list\">\r\n        {filteredExpenses.map((expense) => (\r\n          <ExpenseItem cost={expense} name={expense.title} key={expense.id} />\r\n        ))}\r\n      </ul>\r\n    );\r\n}\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ChartBar.css\";\r\n\r\nfunction ChartBar(props) {\r\n  const { label, value, maxValue } = props;\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (value > 0) {\r\n    barFillHeight = `${Math.round((value / maxValue) * 100)}%`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{label}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartBar;\r\n","import ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nfunction Chart(props) {\r\n  const data = props.dataPoints;\r\n  // const chartDataPoints = months.map((mon) => {\r\n  //   return { label: mon, value: 0 };\r\n  // });\r\n  const dataPointValues = data.map((el) => el.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {data.map((dataPoint) => (\r\n        <ChartBar\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n          key={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\n//returns array of months using Intl API\r\nfunction creatDate(i) {\r\n  return new Intl.DateTimeFormat(\"en-GB\", { month: \"short\" }).format(\r\n    new Date(`2021-${i + 1}-2`)\r\n  );\r\n}\r\nlet months = Array.from({ length: 12 }).map((_, i) => creatDate(i));\r\n\r\nfunction ExpensesChart(props) {\r\n  const { expenses } = props;\r\n  //Create 12 lenth array and map months into it\r\n  const chartDataPoints = months.map((mon) => {\r\n    return { label: mon, value: 0 };\r\n  });\r\n\r\n  expenses.forEach((expense) => {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  });\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n}\r\n\r\nexport default ExpensesChart;\r\n","import ExpensesList from \"./ExpensesList\";\r\nimport ExpensesFilter from \"../NewExpense/ExpensesFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\n\r\nfunction Expenses(props) {\r\n  const expenses = props.expense;\r\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\r\n\r\n  function filterChangeHandler(selectedYear) {\r\n    setFilteredYear(selectedYear);\r\n  }\r\n\r\n  const filteredExpenses = expenses.filter((expense) => {\r\n    return new Date(expense.date).getFullYear() === +filteredYear;\r\n  });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpensesChart expenses={filteredExpenses} />\r\n      <ExpensesList expense={filteredExpenses} />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react/cjs/react.development\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nfunction ExpenseForm(props) {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  function titleChangeHandler(e) {\r\n    setEnteredTitle(e.target.value);\r\n  }\r\n\r\n  function amountChangeHandler(e) {\r\n    setEnteredAmount(e.target.value);\r\n  }\r\n\r\n  function dateChangeHandler(e) {\r\n    setEnteredDate(e.target.value);\r\n  }\r\n\r\n  function submitHandler(e) {\r\n    e.preventDefault();\r\n    //Aggregate form data to object\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    //Send value to parent NewExpense\r\n    props.onSaveExpenseData(expenseData);\r\n    //Clear form input\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            value={enteredAmount}\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            step=\"0.01\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import React from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nfunction NewExpense(props) {\r\n  function saveExpenseDataHandler(enteredExpenseData) {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n  }\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\nimport { INITIAL_EXPENSES } from \"./config\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nfunction App() {\n  const [expenses, setExpenses] = useState(INITIAL_EXPENSES);\n\n  function addExpenseHandler(expense) {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  }\n\n  return (\n    <>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expense={expenses} />\n    </>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}